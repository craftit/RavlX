
cmake_minimum_required(VERSION 3.15)
project(RavlTest)

set(CMAKE_LEGACY_CYGWIN_WIN32 0)
set(CMAKE_CXX_STANDARD 17)

set(EXCLUDE_APPLICATIONS EXCLUDE_FROM_ALL)
set(EXCLUDE_EXAMPLES EXCLUDE_FROM_ALL)
set(EXCLUDE_UNITTESTS EXCLUDE_FROM_ALL)


set(CMAKE_INSTALL_PREFIX "/opt/ReactAI")
set(BUILD_ROOT_AUXFILE "../..")

set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake")

message(" PrefixPath: ${CMAKE_PREFIX_PATH}")
message(" ModulePath: ${CMAKE_MODULE_PATH}")

add_definitions(-DPROJECT_OUT="${CMAKE_BINARY_DIR}/src")
add_definitions(-DDEFAULT_ROOT="${CMAKE_BINARY_DIR}/src")
add_definitions(-DMUSTLINK_JPEG -DMUSTLINK_TIFF -DMUSTLINK_PNG)

set(RAVLX_VERSION 0.1)

find_package(Threads REQUIRED)
find_package(JPEG REQUIRED)
find_package(PNG REQUIRED)
find_package(TIFF REQUIRED)

set(OpenGL_GL_PREFERENCE GLVND)

include (FindPkgConfig)

# This is used if a seperate library is required for tcp/ip sockets, largely legacy I suspect
set(SOCKET_FOUND 1)

$(silent:
$(mapreq:ExtImageLIBS:$(EXTIMGIO_EXTERNALS):TRUE:${PNG_LIBRARIES} ${JPEG_LIBRARIES} ${TIFF_LIBRARIES} :::)
$(mapreq:MacOSX::${CMAKE_SYSTEM_NAME} MATCHES "Darwin"::::)
$(mapreq:Linux::${CMAKE_SYSTEM_NAME} MATCHES "Linux"::::)
$(mapreq:linux::${CMAKE_SYSTEM_NAME} MATCHES "Linux32"::::)
$(mapreq:linux64::${CMAKE_SYSTEM_NAME} MATCHES "Linux"::::)
$(mapreq:macosx32::${CMAKE_SYSTEM_NAME} MATCHES "Darwin32"::::)
$(mapreq:macosx64::${CMAKE_SYSTEM_NAME} MATCHES "Darwin"::::)
$(mapreq:freebsd_x86::${CMAKE_SYSTEM_NAME} MATCHES "Freebsd"::::)
$(mapreq:sol2::${CMAKE_SYSTEM_NAME} MATCHES "Solaris"::::)
$(mapreq:sol2_7::${CMAKE_SYSTEM_NAME} MATCHES "Solaris2_7"::::)
$(mapreq:sgi::${CMAKE_SYSTEM_NAME} MATCHES "SGI"::::)
$(mapreq:alpha::${CMAKE_SYSTEM_NAME} MATCHES "alpha"::::)
$(mapreq:!VCPP::NOT ${CMAKE_CXX_COMPILER_ID} MATCHES "MSVC"::::)
$(mapreq:VCPP::${CMAKE_CXX_COMPILER_ID} MATCHES "MSVC"::::)
$(mapreq:!arm::NOT ${CMAKE_SYSTEM_PROCESSOR} MATCHES "arm"::::)
$(mapreq:arm::${CMAKE_SYSTEM_PROCESSOR} MATCHES "arm"::::)
$(mapreq:cygwin::${CMAKE_SYSTEM_NAME} STREQUAL "CYGWIN"::::)
$(mapreq:!cygwin::NOT ${CMAKE_SYSTEM_NAME} STREQUAL "CYGWIN"::::)
$(mapreq:DynLink:DynLink:TRUE:dl:::)
$(mapreq:posixThreads:posixThreads:Threads_FOUND:${CMAKE_THREAD_LIBS_INIT}:::)
$(mapreq:Thread:Threads:Threads_FOUND:${CMAKE_THREAD_LIBS_INIT}:::)
$(mapreq:gthread:gthread:gthread_FOUND:${gthread_LIBRARIES}:${gthread_INCLUDE_DIRS}:${gthread_LIBRARY_DIRS}:pkg_check_modules(gthread QUIET gthread-2.0))
$(mapreq:Zlib:zlib:ZLIB_FOUND:${ZLIB_LIBRARIES}:${ZLIB_INCLUDE_DIRS}:${ZLIB_LIBRARY_DIRS}:find_package(ZLIB QUIET))
$(mapreq:LAPACK:LibLapack:LAPACK_FOUND:${LAPACK_LIBRARIES}:${LAPACK_INCLUDE_DIRS}:${LAPACK_LIBRARY_DIRS}:find_package(LAPACK QUIET))
$(mapreq:X11:x11:X11_FOUND:${X11_LIBRARIES}:${X11_INCLUDE_DIRS}:${X11_LIBRARY_DIRS}:find_package(X11 QUIET))
$(mapreq:libCurl:libcurl:CURL_FOUND:${CURL_LIBRARIES}:${CURL_INCLUDE_DIRS}:${CURL_LIBRARY_DIRS}:find_package(CURL QUIET))
$(mapreq:libGTK2:GTK:GTK2_FOUND:${GTK2_LIBRARIES}:${GTK2_INCLUDE_DIRS}:${GTK2_LIBRARY_DIRS}:find_package(GTK2 QUIET))
$(mapreq:Bullet:Bullet:BULLET_FOUND:${BULLET_LIBRARIES}:${BULLET_INCLUDE_DIRS}:${BULLET_LIBRARY_DIRS}:find_package(BULLET QUIET))
$(mapreq:ZeroMQ:Zmq:libzmq_FOUND:${libzmq_LIBRARIES}:${libzmq_INCLUDE_DIRS}:${libzmq_LIBRARY_DIRS}:pkg_check_modules(libzmq QUIET libzmq))
$(mapreq:RLog:RLog:librlog_FOUND:${librlog_LIBRARIES}:${librlog_INCLUDE_DIRS}:${librlog_LIBRARY_DIRS}:pkg_check_modules(librlog QUIET librlog))
$(mapreq:OpenSceneGraph:OpenSceneGraph:OPENSCENEGRAPH_FOUND:${OPENSCENEGRAPH_LIBRARIES}:${OPENSCENEGRAPH_INCLUDE_DIRS}:${OPENSCENEGRAPH_LIBRARY_DIRS}:pkg_check_modules(OPENSCENEGRAPH QUIET osgDB osgFX osgGA osgParticle osgSim osgText osgUtil osgTerrain osgManipulator osgViewer osgWidget osgShadow osgAnimation osgVolume))
$(mapreq:OpenSceneGraphGTK:OpenSceneGraphGtk:OPENSCENEGRAPHGTK_FOUND:${OPENSCENEGRAPHGTK_LIBRARIES}:${OPENSCENEGRAPHGTK_INCLUDE_DIRS}:${OPENSCENEGRAPHGTK_LIBRARY_DIRS}:pkg_check_modules(OPENSCENEGRAPHGTK QUIET OPENSCENEGRAPHGTK))
$(mapreq:OpenCV:OpenCV:opencv_FOUND:${opencv_LIBRARIES}:${opencv_INCLUDE_DIRS}:${opencv_LIBRARY_DIRS}:pkg_check_modules(opencv QUIET opencv))
$(mapreq:Loudmouth:Loudmouth:loudmouth_FOUND:${loudmouth_LIBRARIES}:${loudmouth_INCLUDE_DIRS}:${loudmouth_LIBRARY_DIRS}:pkg_check_modules(loudmouth QUIET loudmouth-1.0))
$(mapreq:iksemel:iksemel:iksemel_FOUND:${iksemel_LIBRARIES}:${iksemel_INCLUDE_DIRS}:${iksemel_LIBRARY_DIRS}:pkg_check_modules(iksemel QUIET iksemel))
$(mapreq:UUIdTheo:uuid:uuid_FOUND:${uuid_LIBRARIES}:${uuid_INCLUDE_DIRS}:${uuid_LIBRARY_DIRS}:pkg_check_modules(uuid QUIET uuid))
$(mapreq:uEyeSDK:uEyeSDK:uEyeSDK_FOUND:${uEyeSDK_LIBRARIES}:${uEyeSDK_INCLUDE_DIRS}:${uEyeSDK_LIBRARY_DIRS}:)
$(mapreq:libDV:LibDV:libdv_FOUND:${libdv_LIBRARIES}:${libdv_INCLUDE_DIRS}:${libdv_LIBRARY_DIRS}:pkg_check_modules(libdv QUIET libdv))
$(mapreq:LibPython:Python:python_FOUND:${python_LIBRARIES}:${python_INCLUDE_DIRS}:${python_LIBRARY_DIRS}:pkg_check_modules(python QUIET python))
$(mapreq:PulseAudioSimple:PulseAudioSimple:DEFINED libpulse-simple_FOUND:${libpulse-simple_LIBRARIES}:${libpulse-simple_INCLUDE_DIRS}:${libpulse-simple_LIBRARY_DIRS}:pkg_check_modules(libpulse-simple QUIET libpulse-simple))
$(mapreq:LibGd:LibGd:libgd_FOUND:${libgd_LIBRARIES}:${libgd_INCLUDE_DIRS}:${libgd_LIBRARY_DIRS}:pkg_check_modules(libgd QUIET libgd))
$(mapreq:libehs:LibEHS:libehs_FOUND:${libehs_LIBRARIES}:${libehs_INCLUDE_DIRS}:${libehs_LIBRARY_DIRS}:)
$(mapreq:LibGnome:LibGnome:libgnome_FOUND:${libgnome_LIBRARIES}:${libgnome_INCLUDE_DIRS}:${libgnome_LIBRARY_DIRS}:pkg_check_modules(libgnome QUIET libgnome-2.0))
$(mapreq:LibJasper:LibJasper:libjasper_FOUND:${libjasper_LIBRARIES}:${libjasper_INCLUDE_DIRS}:${libjasper_LIBRARY_DIRS}:)
$(mapreq:avifile:AVIFile:avifile_FOUND:${avifile_LIBRARIES}:${avifile_INCLUDE_DIRS}:${avifile_LIBRARY_DIRS}:pkg_check_modules(avifile QUIET avifile-1))
$(mapreq:libGuppi:LibGuppi:libguppi_FOUND:${libguppi_LIBRARIES}:${libguppi_INCLUDE_DIRS}:${libguppi_LIBRARY_DIRS}:)
$(mapreq:PortAudio:portAudio:portaudio_FOUND:${portaudio_LIBRARIES}:${portaudio_INCLUDE_DIRS}:${portaudio_LIBRARY_DIRS}:pkg_check_modules(portaudio QUIET portaudio-2.0))
$(mapreq:libdc1394:Lib1394dc:libdc1394_FOUND:${libdc1394_LIBRARIES}:${libdc1394_INCLUDE_DIRS}:${libdc1394_LIBRARY_DIRS}:pkg_check_modules(libdc1394 QUIET libdc1394-1))
$(mapreq:libAudioFile:AudioFile:audiofile_FOUND:${audiofile_LIBRARIES}:${audiofile_INCLUDE_DIRS}:${audiofile_LIBRARY_DIRS}:pkg_check_modules(audiofile QUIET audiofile))
$(mapreq:libmpeg2:LibMPEG2:libmpeg2_FOUND:${libmpeg2_LIBRARIES}:${libmpeg2_INCLUDE_DIRS}:${libmpeg2_LIBRARY_DIRS}:pkg_check_modules(libmpeg2 QUIET libmpeg2))
$(mapreq:devVideo4Linux2::${CMAKE_SYSTEM_NAME} STREQUAL "Linux"::::)
$(mapreq:devVideo4Linux::FALSE::::)
$(mapreq:SGIVL::SGI::::)
$(mapreq:dvdread:DVDRead:dvdread_FOUND:${dvdread_LIBRARIES}:${dvdread_INCLUDE_DIRS}:${dvdread_LIBRARY_DIRS}:pkg_check_modules(dvdread QUIET dvdread-X))
$(mapreq:libClipStationPro:ClipStationPro:DEFINED libClipStationPro_FOUND:${libClipStationPro_LIBRARIES}:${libClipStationPro_INCLUDE_DIRS}:${libClipStationPro_LIBRARY_DIRS}:)
$(mapreq:libmcrypt:LibMCrypt:libmcrypt_FOUND:${libmcrypt_LIBRARIES}:${libmcrypt_INCLUDE_DIRS}:${libmcrypt_LIBRARY_DIRS}:)
$(mapreq:libGL:OpenGL:OPENGL_FOUND:${OPENGL_LIBRARIES}:${OPENGL_INCLUDE_DIR}::find_package(OpenGL))
$(mapreq:Socket:Socket:SOCKET_FOUND:${SOCKET_LIBRARIES}:::)
$(mapreq:libglade2:libglade:libglade_FOUND:${libglade_LIBRARIES}:${libglade_INCLUDE_DIRS}:${libglade_LIBRARY_DIRS}:pkg_check_modules(libglade QUIET libglade-2.0))
$(mapreq:gtkglext:GtkGLExt:gtkglext_FOUND:${gtkglext_LIBRARIES}:${gtkglext_INCLUDE_DIRS}:${gtkglext_LIBRARY_DIRS}:pkg_check_modules(gtkglext QUIET gtkglext-1.0))
$(mapreq:libmkl:IntelMKL:MKL_FOUND:${MKL_LIBRARIES}:${MKL_INCLUDE_DIRS}:${MKL_LIBRARY_DIRS}:)
$(mapreq:PyTorchCXX:PyTorchCXX:torch_FOUND:torch:${torch_INCLUDE_DIRS}:${torch_LIBRARY_DIRS}:find_package(Torch QUIET))
$(mapreq:JSONCPP:JSONCPP:jsoncpp_FOUND:${jsoncpp_LIBRARIES}:${jsoncpp_INCLUDE_DIRS}:${jsoncpp_LIBRARY_DIRS}:pkg_check_modules(jsoncpp QUIET jsoncpp))
$(mapreq:libpqxx:pqxx:libpqxx_FOUND:${libpqxx_LIBRARIES}:${libpqxx_INCLUDE_DIRS}:${libpqxx_LIBRARY_DIRS}:pkg_check_modules(libpqxx QUIET libpqxx))
$(mapreq:libmicrohttpd:libmicrohttpd:libmicrohttpd_FOUND:${libmicrohttpd_LIBRARIES}:${libmicrohttpd_INCLUDE_DIRS}:${libmicrohttpd_LIBRARY_DIRS}:pkg_check_modules(libmicrohttpd QUIET libmicrohttpd))
$(mapreq:CBlas:CBlas:openblas_FOUND:${openblas_LIBRARIES}:${openblas_INCLUDE_DIRS}:${openblas_LIBRARY_DIRS}:pkg_check_modules(openblas QUIET openblas))
$(mapreq:libOAuth:libOAuth:oauth_FOUND:${oauth_LIBRARIES}:${oauth_INCLUDE_DIRS}:${oauth_LIBRARY_DIRS}:pkg_check_modules(oauth QUIET oauth))
$(mapreq:YajlLocal:YajlLocal:yajl_FOUND:${yajl_LIBRARIES}:${yajl_INCLUDE_DIRS}:${yajl_LIBRARY_DIRS}:pkg_check_modules(yajl QUIET yajl))
$(mapreq:Mesos:Mesos:MESOS_FOUND:${MESOS_LIBRARIES}:${MESOS_INCLUDE_DIRS}:${MESOS_LIBRARY_DIRS}:find_package(Mesos QUIET))
$(mapreq:websocketpp:websocketpp:WEBSOCKETPP_FOUND:${WEBSOCKETPP_LIBRARIES}:${WEBSOCKETPP_INCLUDE_DIRS}:${WEBSOCKETPP_LIBRARY_DIRS}:find_package(websocketpp QUIET))
$(mapreq:GLUT:GLUT:GLUT_FOUND:${GLUT_LIBRARIES}:${GLUT_INCLUDE_DIRS}:${GLUT_LIBRARY_DIRS}:find_package(GLUT QUIET))
$(mapreq:DL:dl:::::)
)

#
# JSONC

$(forall:extlibs:$(ifused:$libname:
$(ifset:findCmd:$(findCmd)
)if($(found))
message(STATUS "$(lib) found LIBS:$(link)")
$(ifset:header_path:if(NOT "$(header_path)" STREQUAL "")
message(STATUS " Include : $(header_path)")
include_directories($(header_path))
endif()
)$(ifset:library_path:if(NOT "$(library_path)" STREQUAL "")
message(STATUS " Library : $(library_path)")
link_directories($(library_path))
endif()
)else()
message(STATUS "$(lib) not found")
endif()
))

if(gtkglext_FOUND)
add_definitions(-DRAVL_USE_GTKGLEXT=1)
endif()

enable_testing()

$(forall:toplevel:add_subdirectory(src/$(lib))
)

